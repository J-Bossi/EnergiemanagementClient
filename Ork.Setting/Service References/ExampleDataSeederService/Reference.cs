//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ork.Setting.ExampleDataSeederService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExampleDataSeederService.ExampleDataSeederService")]
    public interface ExampleDataSeederService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExampleDataSeederService/Seed", ReplyAction="http://tempuri.org/ExampleDataSeederService/SeedResponse")]
        void Seed();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ExampleDataSeederService/Seed", ReplyAction="http://tempuri.org/ExampleDataSeederService/SeedResponse")]
        System.IAsyncResult BeginSeed(System.AsyncCallback callback, object asyncState);
        
        void EndSeed(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ExampleDataSeederServiceChannel : Ork.Setting.ExampleDataSeederService.ExampleDataSeederService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExampleDataSeederServiceClient : System.ServiceModel.ClientBase<Ork.Setting.ExampleDataSeederService.ExampleDataSeederService>, Ork.Setting.ExampleDataSeederService.ExampleDataSeederService {
        
        private BeginOperationDelegate onBeginSeedDelegate;
        
        private EndOperationDelegate onEndSeedDelegate;
        
        private System.Threading.SendOrPostCallback onSeedCompletedDelegate;
        
        public ExampleDataSeederServiceClient() {
        }
        
        public ExampleDataSeederServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExampleDataSeederServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleDataSeederServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleDataSeederServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SeedCompleted;
        
        public void Seed() {
            base.Channel.Seed();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSeed(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSeed(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSeed(System.IAsyncResult result) {
            base.Channel.EndSeed(result);
        }
        
        private System.IAsyncResult OnBeginSeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSeed(callback, asyncState);
        }
        
        private object[] OnEndSeed(System.IAsyncResult result) {
            this.EndSeed(result);
            return null;
        }
        
        private void OnSeedCompleted(object state) {
            if ((this.SeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SeedAsync() {
            this.SeedAsync(null);
        }
        
        public void SeedAsync(object userState) {
            if ((this.onBeginSeedDelegate == null)) {
                this.onBeginSeedDelegate = new BeginOperationDelegate(this.OnBeginSeed);
            }
            if ((this.onEndSeedDelegate == null)) {
                this.onEndSeedDelegate = new EndOperationDelegate(this.OnEndSeed);
            }
            if ((this.onSeedCompletedDelegate == null)) {
                this.onSeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSeedCompleted);
            }
            base.InvokeAsync(this.onBeginSeedDelegate, null, this.onEndSeedDelegate, this.onSeedCompletedDelegate, userState);
        }
    }
}
